<?php

namespace Imoing\Pptx\Enum;

use Imoing\Pptx\Enum\Base\TraitXmlEnum;
use Imoing\Pptx\Enum\Base\IBaseXmlEnum;

Enum MsoAutoShapeType: int implements IBaseXmlEnum
{
    use TraitXmlEnum;
    case ACTION_BUTTON_BACK_OR_PREVIOUS = 129;
    case ACTION_BUTTON_BEGINNING = 131;
    case ACTION_BUTTON_CUSTOM = 125;
    case ACTION_BUTTON_DOCUMENT = 134;
    case ACTION_BUTTON_END = 132;
    case ACTION_BUTTON_FORWARD_OR_NEXT = 130;
    case ACTION_BUTTON_HELP = 127;
    case ACTION_BUTTON_HOME = 126;
    case ACTION_BUTTON_INFORMATION = 128;
    case ACTION_BUTTON_MOVIE = 136;
    case ACTION_BUTTON_RETURN = 133;
    case ACTION_BUTTON_SOUND = 135;
    case ARC = 25;
    case BALLOON = 137;
    case BENT_ARROW = 41;
    case BENT_UP_ARROW = 44;
    case BEVEL = 15;
    case BLOCK_ARC = 20;
    case CAN = 13;
    case CHART_PLUS = 182;
    case CHART_STAR = 181;
    case CHART_X = 180;
    case CHEVRON = 52;
    case CHORD = 161;
    case CIRCULAR_ARROW = 60;
    case CLOUD = 179;
    case CLOUD_CALLOUT = 108;
    case CORNER = 162;
    case CORNER_TABS = 169;
    case CROSS = 11;
    case CUBE = 14;
    case CURVED_DOWN_ARROW = 48;
    case CURVED_DOWN_RIBBON = 100;
    case CURVED_LEFT_ARROW = 46;
    case CURVED_RIGHT_ARROW = 45;
    case CURVED_UP_ARROW = 47;
    case CURVED_UP_RIBBON = 99;
    case DECAGON = 144;
    case DIAGONAL_STRIPE = 141;
    case DIAMOND = 4;
    case DODECAGON = 146;
    case DONUT = 18;
    case DOUBLE_BRACE = 27;
    case DOUBLE_BRACKET = 26;
    case DOUBLE_WAVE = 104;
    case DOWN_ARROW = 36;
    case DOWN_ARROW_CALLOUT = 56;
    case DOWN_RIBBON = 98;
    case EXPLOSION1 = 89;
    case EXPLOSION2 = 90;
    case FLOWCHART_ALTERNATE_PROCESS = 62;
    case FLOWCHART_CARD = 75;
    case FLOWCHART_COLLATE = 79;
    case FLOWCHART_CONNECTOR = 73;
    case FLOWCHART_DATA = 64;
    case FLOWCHART_DECISION = 63;
    case FLOWCHART_DELAY = 84;
    case FLOWCHART_DIRECT_ACCESS_STORAGE = 87;
    case FLOWCHART_DISPLAY = 88;
    case FLOWCHART_DOCUMENT = 67;
    case FLOWCHART_EXTRACT = 81;
    case FLOWCHART_INTERNAL_STORAGE = 66;
    case FLOWCHART_MAGNETIC_DISK = 86;
    case FLOWCHART_MANUAL_INPUT = 71;
    case FLOWCHART_MANUAL_OPERATION = 72;
    case FLOWCHART_MERGE = 82;
    case FLOWCHART_MULTIDOCUMENT = 68;
    case FLOWCHART_OFFLINE_STORAGE = 139;
    case FLOWCHART_OFFPAGE_CONNECTOR = 74;
    case FLOWCHART_OR = 78;
    case FLOWCHART_PREDEFINED_PROCESS = 65;
    case FLOWCHART_PREPARATION = 70;
    case FLOWCHART_PROCESS = 61;
    case FLOWCHART_PUNCHED_TAPE = 76;
    case FLOWCHART_SEQUENTIAL_ACCESS_STORAGE = 85;
    case FLOWCHART_SORT = 80;
    case FLOWCHART_STORED_DATA = 83;
    case FLOWCHART_SUMMING_JUNCTION = 77;
    case FLOWCHART_TERMINATOR = 69;
    case FOLDED_CORNER = 16;
    case FRAME = 158;
    case FUNNEL = 174;
    case GEAR_6 = 172;
    case GEAR_9 = 173;
    case HALF_FRAME = 159;
    case HEART = 21;
    case HEPTAGON = 145;
    case HEXAGON = 10;
    case HORIZONTAL_SCROLL = 102;
    case ISOSCELES_TRIANGLE = 7;
    case LEFT_ARROW = 34;
    case LEFT_ARROW_CALLOUT = 54;
    case LEFT_BRACE = 31;
    case LEFT_BRACKET = 29;
    case LEFT_CIRCULAR_ARROW = 176;
    case LEFT_RIGHT_ARROW = 37;
    case LEFT_RIGHT_ARROW_CALLOUT = 57;
    case LEFT_RIGHT_CIRCULAR_ARROW = 177;
    case LEFT_RIGHT_RIBBON = 140;
    case LEFT_RIGHT_UP_ARROW = 40;
    case LEFT_UP_ARROW = 43;
    case LIGHTNING_BOLT = 22;
    case LINE_CALLOUT_1 = 109;
    case LINE_CALLOUT_1_ACCENT_BAR = 113;
    case LINE_CALLOUT_1_BORDER_AND_ACCENT_BAR = 121;
    case LINE_CALLOUT_1_NO_BORDER = 117;
    case LINE_CALLOUT_2 = 110;
    case LINE_CALLOUT_2_ACCENT_BAR = 114;
    case LINE_CALLOUT_2_BORDER_AND_ACCENT_BAR = 122;
    case LINE_CALLOUT_2_NO_BORDER = 118;
    case LINE_CALLOUT_3 = 111;
    case LINE_CALLOUT_3_ACCENT_BAR = 115;
    case LINE_CALLOUT_3_BORDER_AND_ACCENT_BAR = 123;
    case LINE_CALLOUT_3_NO_BORDER = 119;
    case LINE_CALLOUT_4 = 112;
    case LINE_CALLOUT_4_ACCENT_BAR = 116;
    case LINE_CALLOUT_4_BORDER_AND_ACCENT_BAR = 124;
    case LINE_CALLOUT_4_NO_BORDER = 120;
    case LINE_INVERSE = 183;
    case MATH_DIVIDE = 166;
    case MATH_EQUAL = 167;
    case MATH_MINUS = 164;
    case MATH_MULTIPLY = 165;
    case MATH_NOT_EQUAL = 168;
    case MATH_PLUS = 163;
    case MOON = 24;
    case NON_ISOSCELES_TRAPEZOID = 143;
    case NOTCHED_RIGHT_ARROW = 50;
    case NO_SYMBOL = 19;
    case OCTAGON = 6;
    case OVAL = 9;
    case OVAL_CALLOUT = 107;
    case PARALLELOGRAM = 2;
    case PENTAGON = 51;
    case PIE = 142;
    case PIE_WEDGE = 175;
    case PLAQUE = 28;
    case PLAQUE_TABS = 171;
    case QUAD_ARROW = 39;
    case QUAD_ARROW_CALLOUT = 59;
    case RECTANGLE = 1;
    case RECTANGULAR_CALLOUT = 105;
    case REGULAR_PENTAGON = 12;
    case RIGHT_ARROW = 33;
    case RIGHT_ARROW_CALLOUT = 53;
    case RIGHT_BRACE = 32;
    case RIGHT_BRACKET = 30;
    case RIGHT_TRIANGLE = 8;
    case ROUNDED_RECTANGLE = 5;
    case ROUNDED_RECTANGULAR_CALLOUT = 106;
    case ROUND_1_RECTANGLE = 151;
    case ROUND_2_DIAG_RECTANGLE = 153;
    case ROUND_2_SAME_RECTANGLE = 152;
    case SMILEY_FACE = 17;
    case SNIP_1_RECTANGLE = 155;
    case SNIP_2_DIAG_RECTANGLE = 157;
    case SNIP_2_SAME_RECTANGLE = 156;
    case SNIP_ROUND_RECTANGLE = 154;
    case SQUARE_TABS = 170;
    case STAR_10_POINT = 149;
    case STAR_12_POINT = 150;
    case STAR_16_POINT = 94;
    case STAR_24_POINT = 95;
    case STAR_32_POINT = 96;
    case STAR_4_POINT = 91;
    case STAR_5_POINT = 92;
    case STAR_6_POINT = 147;
    case STAR_7_POINT = 148;
    case STAR_8_POINT = 93;
    case STRIPED_RIGHT_ARROW = 49;
    case SUN = 23;
    case SWOOSH_ARROW = 178;
    case TEAR = 160;
    case TRAPEZOID = 3;
    case UP_ARROW = 35;
    case UP_ARROW_CALLOUT = 55;
    case UP_DOWN_ARROW = 38;
    case UP_DOWN_ARROW_CALLOUT = 58;
    case UP_RIBBON = 97;
    case U_TURN_ARROW = 42;
    case VERTICAL_SCROLL = 101;
    case WAVE = 103;


    public static function getXmlValues() : array
    {
        static $values = [
            self::ACTION_BUTTON_BACK_OR_PREVIOUS->value => ["actionButtonBackPrevious","Back or Previous button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_BEGINNING->value => ["actionButtonBeginning","Beginning button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_CUSTOM->value => ["actionButtonBlank","Button with no default picture or text. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_DOCUMENT->value => ["actionButtonDocument","Document button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_END->value => ["actionButtonEnd","End button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_FORWARD_OR_NEXT->value => ["actionButtonForwardNext","Forward or Next button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_HELP->value => ["actionButtonHelp","Help button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_HOME->value => ["actionButtonHome","Home button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_INFORMATION->value => ["actionButtonInformation","Information button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_MOVIE->value => ["actionButtonMovie","Movie button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_RETURN->value => ["actionButtonReturn","Return button. Supports mouse-click and mouse-over actions"],
            self::ACTION_BUTTON_SOUND->value => ["actionButtonSound","Sound button. Supports mouse-click and mouse-over actions"],
            self::ARC->value => ["arc","Arc"],
            self::BALLOON->value => ["wedgeRoundRectCallout","Rounded Rectangular Callout"],
            self::BENT_ARROW->value => ["bentArrow","Block arrow that follows a curved 90-degree angle"],
            self::BENT_UP_ARROW->value => ["bentUpArrow","Block arrow that follows a sharp 90-degree angle. Points up by default"],
            self::BEVEL->value => ["bevel","Bevel"],
            self::BLOCK_ARC->value => ["blockArc","Block arc"],
            self::CAN->value => ["can","Can"],
            self::CHART_PLUS->value => ["chartPlus","Chart Plus"],
            self::CHART_STAR->value => ["chartStar","Chart Star"],
            self::CHART_X->value => ["chartX","Chart X"],
            self::CHEVRON->value => ["chevron","Chevron"],
            self::CHORD->value => ["chord","Geometric chord shape"],
            self::CIRCULAR_ARROW->value => ["circularArrow","Block arrow that follows a curved 180-degree angle"],
            self::CLOUD->value => ["cloud","Cloud"],
            self::CLOUD_CALLOUT->value => ["cloudCallout","Cloud callout"],
            self::CORNER->value => ["corner","Corner"],
            self::CORNER_TABS->value => ["cornerTabs","Corner Tabs"],
            self::CROSS->value => ["plus","Cross"],
            self::CUBE->value => ["cube","Cube"],
            self::CURVED_DOWN_ARROW->value => ["curvedDownArrow","Block arrow that curves down"],
            self::CURVED_DOWN_RIBBON->value => ["ellipseRibbon","Ribbon banner that curves down"],
            self::CURVED_LEFT_ARROW->value => ["curvedLeftArrow","Block arrow that curves left"],
            self::CURVED_RIGHT_ARROW->value => ["curvedRightArrow","Block arrow that curves right"],
            self::CURVED_UP_ARROW->value => ["curvedUpArrow","Block arrow that curves up"],
            self::CURVED_UP_RIBBON->value => ["ellipseRibbon2","Ribbon banner that curves up"],
            self::DECAGON->value => ["decagon","Decagon"],
            self::DIAGONAL_STRIPE->value => ["diagStripe","Diagonal Stripe"],
            self::DIAMOND->value => ["diamond","Diamond"],
            self::DODECAGON->value => ["dodecagon","Dodecagon"],
            self::DONUT->value => ["donut","Donut"],
            self::DOUBLE_BRACE->value => ["bracePair","Double brace"],
            self::DOUBLE_BRACKET->value => ["bracketPair","Double bracket"],
            self::DOUBLE_WAVE->value => ["doubleWave","Double wave"],
            self::DOWN_ARROW->value => ["downArrow","Block arrow that points down"],
            self::DOWN_ARROW_CALLOUT->value => ["downArrowCallout","Callout with arrow that points down"],
            self::DOWN_RIBBON->value => ["ribbon","Ribbon banner with center area below ribbon ends"],
            self::EXPLOSION1->value => ["irregularSeal1","Explosion"],
            self::EXPLOSION2->value => ["irregularSeal2","Explosion"],
            self::FLOWCHART_ALTERNATE_PROCESS->value => ["flowChartAlternateProcess","Alternate process flowchart symbol"],
            self::FLOWCHART_CARD->value => ["flowChartPunchedCard","Card flowchart symbol"],
            self::FLOWCHART_COLLATE->value => ["flowChartCollate","Collate flowchart symbol"],
            self::FLOWCHART_CONNECTOR->value => ["flowChartConnector","Connector flowchart symbol"],
            self::FLOWCHART_DATA->value => ["flowChartInputOutput","Data flowchart symbol"],
            self::FLOWCHART_DECISION->value => ["flowChartDecision","Decision flowchart symbol"],
            self::FLOWCHART_DELAY->value => ["flowChartDelay","Delay flowchart symbol"],
            self::FLOWCHART_DIRECT_ACCESS_STORAGE->value => ["flowChartMagneticDrum","Direct access storage flowchart symbol"],
            self::FLOWCHART_DISPLAY->value => ["flowChartDisplay","Display flowchart symbol"],
            self::FLOWCHART_DOCUMENT->value => ["flowChartDocument","Document flowchart symbol"],
            self::FLOWCHART_EXTRACT->value => ["flowChartExtract","Extract flowchart symbol"],
            self::FLOWCHART_INTERNAL_STORAGE->value => ["flowChartInternalStorage","Internal storage flowchart symbol"],
            self::FLOWCHART_MAGNETIC_DISK->value => ["flowChartMagneticDisk","Magnetic disk flowchart symbol"],
            self::FLOWCHART_MANUAL_INPUT->value => ["flowChartManualInput","Manual input flowchart symbol"],
            self::FLOWCHART_MANUAL_OPERATION->value => ["flowChartManualOperation","Manual operation flowchart symbol"],
            self::FLOWCHART_MERGE->value => ["flowChartMerge","Merge flowchart symbol"],
            self::FLOWCHART_MULTIDOCUMENT->value => ["flowChartMultidocument","Multi-document flowchart symbol"],
            self::FLOWCHART_OFFLINE_STORAGE->value => ["flowChartOfflineStorage","Offline Storage"],
            self::FLOWCHART_OFFPAGE_CONNECTOR->value => ["flowChartOffpageConnector","Off-page connector flowchart symbol"],
            self::FLOWCHART_OR->value => ["flowChartOr",""Or" flowchart symbol"],
            self::FLOWCHART_PREDEFINED_PROCESS->value => ["flowChartPredefinedProcess","Predefined process flowchart symbol"],
            self::FLOWCHART_PREPARATION->value => ["flowChartPreparation","Preparation flowchart symbol"],
            self::FLOWCHART_PROCESS->value => ["flowChartProcess","Process flowchart symbol"],
            self::FLOWCHART_PUNCHED_TAPE->value => ["flowChartPunchedTape","Punched tape flowchart symbol"],
            self::FLOWCHART_SEQUENTIAL_ACCESS_STORAGE->value => ["flowChartMagneticTape","Sequential access storage flowchart symbol"],
            self::FLOWCHART_SORT->value => ["flowChartSort","Sort flowchart symbol"],
            self::FLOWCHART_STORED_DATA->value => ["flowChartOnlineStorage","Stored data flowchart symbol"],
            self::FLOWCHART_SUMMING_JUNCTION->value => ["flowChartSummingJunction","Summing junction flowchart symbol"],
            self::FLOWCHART_TERMINATOR->value => ["flowChartTerminator","Terminator flowchart symbol"],
            self::FOLDED_CORNER->value => ["foldedCorner","Folded corner"],
            self::FRAME->value => ["frame","Frame"],
            self::FUNNEL->value => ["funnel","Funnel"],
            self::GEAR_6->value => ["gear6","Gear 6"],
            self::GEAR_9->value => ["gear9","Gear 9"],
            self::HALF_FRAME->value => ["halfFrame","Half Frame"],
            self::HEART->value => ["heart","Heart"],
            self::HEPTAGON->value => ["heptagon","Heptagon"],
            self::HEXAGON->value => ["hexagon","Hexagon"],
            self::HORIZONTAL_SCROLL->value => ["horizontalScroll","Horizontal scroll"],
            self::ISOSCELES_TRIANGLE->value => ["triangle","Isosceles triangle"],
            self::LEFT_ARROW->value => ["leftArrow","Block arrow that points left"],
            self::LEFT_ARROW_CALLOUT->value => ["leftArrowCallout","Callout with arrow that points left"],
            self::LEFT_BRACE->value => ["leftBrace","Left brace"],
            self::LEFT_BRACKET->value => ["leftBracket","Left bracket"],
            self::LEFT_CIRCULAR_ARROW->value => ["leftCircularArrow","Left Circular Arrow"],
            self::LEFT_RIGHT_ARROW->value => ["leftRightArrow","Block arrow with arrowheads that point both left and right"],
            self::LEFT_RIGHT_ARROW_CALLOUT->value => ["leftRightArrowCallout","Callout with arrowheads that point both left and right"],
            self::LEFT_RIGHT_CIRCULAR_ARROW->value => ["leftRightCircularArrow","Left Right Circular Arrow"],
            self::LEFT_RIGHT_RIBBON->value => ["leftRightRibbon","Left Right Ribbon"],
            self::LEFT_RIGHT_UP_ARROW->value => ["leftRightUpArrow","Block arrow with arrowheads that point left, right, and up"],
            self::LEFT_UP_ARROW->value => ["leftUpArrow","Block arrow with arrowheads that point left and up"],
            self::LIGHTNING_BOLT->value => ["lightningBolt","Lightning bolt"],
            self::LINE_CALLOUT_1->value => ["borderCallout1","Callout with border and horizontal callout line"],
            self::LINE_CALLOUT_1_ACCENT_BAR->value => ["accentCallout1","Callout with vertical accent bar"],
            self::LINE_CALLOUT_1_BORDER_AND_ACCENT_BAR->value => ["accentBorderCallout1","Callout with border and vertical accent bar"],
            self::LINE_CALLOUT_1_NO_BORDER->value => ["callout1","Callout with horizontal line"],
            self::LINE_CALLOUT_2->value => ["borderCallout2","Callout with diagonal straight line"],
            self::LINE_CALLOUT_2_ACCENT_BAR->value => ["accentCallout2","Callout with diagonal callout line and accent bar"],
            self::LINE_CALLOUT_2_BORDER_AND_ACCENT_BAR->value => ["accentBorderCallout2","Callout with border, diagonal straight line, and accent bar"],
            self::LINE_CALLOUT_2_NO_BORDER->value => ["callout2","Callout with no border and diagonal callout line"],
            self::LINE_CALLOUT_3->value => ["borderCallout3","Callout with angled line"],
            self::LINE_CALLOUT_3_ACCENT_BAR->value => ["accentCallout3","Callout with angled callout line and accent bar"],
            self::LINE_CALLOUT_3_BORDER_AND_ACCENT_BAR->value => ["accentBorderCallout3","Callout with border, angled callout line, and accent bar"],
            self::LINE_CALLOUT_3_NO_BORDER->value => ["callout3","Callout with no border and angled callout line"],
            self::LINE_CALLOUT_4->value => ["borderCallout3","Callout with callout line segments forming a U-shape."],
            self::LINE_CALLOUT_4_ACCENT_BAR->value => ["accentCallout3","Callout with accent bar and callout line segments forming a U-shape."],
            self::LINE_CALLOUT_4_BORDER_AND_ACCENT_BAR->value => ["accentBorderCallout3","Callout with border, accent bar, and callout line segments forming a U-shape."],
            self::LINE_CALLOUT_4_NO_BORDER->value => ["callout3","Callout with no border and callout line segments forming a U-shape."],
            self::LINE_INVERSE->value => ["lineInv","Straight Connector"],
            self::MATH_DIVIDE->value => ["mathDivide","Division"],
            self::MATH_EQUAL->value => ["mathEqual","Equal"],
            self::MATH_MINUS->value => ["mathMinus","Minus"],
            self::MATH_MULTIPLY->value => ["mathMultiply","Multiply"],
            self::MATH_NOT_EQUAL->value => ["mathNotEqual","Not Equal"],
            self::MATH_PLUS->value => ["mathPlus","Plus"],
            self::MOON->value => ["moon","Moon"],
            self::NON_ISOSCELES_TRAPEZOID->value => ["nonIsoscelesTrapezoid","Non-isosceles Trapezoid"],
            self::NOTCHED_RIGHT_ARROW->value => ["notchedRightArrow","Notched block arrow that points right"],
            self::NO_SYMBOL->value => ["noSmoking","'No' Symbol"],
            self::OCTAGON->value => ["octagon","Octagon"],
            self::OVAL->value => ["ellipse","Oval"],
            self::OVAL_CALLOUT->value => ["wedgeEllipseCallout","Oval-shaped callout"],
            self::PARALLELOGRAM->value => ["parallelogram","Parallelogram"],
            self::PENTAGON->value => ["homePlate","Pentagon"],
            self::PIE->value => ["pie","Pie"],
            self::PIE_WEDGE->value => ["pieWedge","Pie"],
            self::PLAQUE->value => ["plaque","Plaque"],
            self::PLAQUE_TABS->value => ["plaqueTabs","Plaque Tabs"],
            self::QUAD_ARROW->value => ["quadArrow","Block arrows that point up, down, left, and right"],
            self::QUAD_ARROW_CALLOUT->value => ["quadArrowCallout","Callout with arrows that point up, down, left, and right"],
            self::RECTANGLE->value => ["rect","Rectangle"],
            self::RECTANGULAR_CALLOUT->value => ["wedgeRectCallout","Rectangular callout"],
            self::REGULAR_PENTAGON->value => ["pentagon","Pentagon"],
            self::RIGHT_ARROW->value => ["rightArrow","Block arrow that points right"],
            self::RIGHT_ARROW_CALLOUT->value => ["rightArrowCallout","Callout with arrow that points right"],
            self::RIGHT_BRACE->value => ["rightBrace","Right brace"],
            self::RIGHT_BRACKET->value => ["rightBracket","Right bracket"],
            self::RIGHT_TRIANGLE->value => ["rtTriangle","Right triangle"],
            self::ROUNDED_RECTANGLE->value => ["roundRect","Rounded rectangle"],
            self::ROUNDED_RECTANGULAR_CALLOUT->value => ["wedgeRoundRectCallout","Rounded rectangle-shaped callout"],
            self::ROUND_1_RECTANGLE->value => ["round1Rect","Round Single Corner Rectangle"],
            self::ROUND_2_DIAG_RECTANGLE->value => ["round2DiagRect","Round Diagonal Corner Rectangle"],
            self::ROUND_2_SAME_RECTANGLE->value => ["round2SameRect","Round Same Side Corner Rectangle"],
            self::SMILEY_FACE->value => ["smileyFace","Smiley face"],
            self::SNIP_1_RECTANGLE->value => ["snip1Rect","Snip Single Corner Rectangle"],
            self::SNIP_2_DIAG_RECTANGLE->value => ["snip2DiagRect","Snip Diagonal Corner Rectangle"],
            self::SNIP_2_SAME_RECTANGLE->value => ["snip2SameRect","Snip Same Side Corner Rectangle"],
            self::SNIP_ROUND_RECTANGLE->value => ["snipRoundRect","Snip and Round Single Corner Rectangle"],
            self::SQUARE_TABS->value => ["squareTabs","Square Tabs"],
            self::STAR_10_POINT->value => ["star10","10-Point Star"],
            self::STAR_12_POINT->value => ["star12","12-Point Star"],
            self::STAR_16_POINT->value => ["star16","16-point star"],
            self::STAR_24_POINT->value => ["star24","24-point star"],
            self::STAR_32_POINT->value => ["star32","32-point star"],
            self::STAR_4_POINT->value => ["star4","4-point star"],
            self::STAR_5_POINT->value => ["star5","5-point star"],
            self::STAR_6_POINT->value => ["star6","6-Point Star"],
            self::STAR_7_POINT->value => ["star7","7-Point Star"],
            self::STAR_8_POINT->value => ["star8","8-point star"],
            self::STRIPED_RIGHT_ARROW->value => ["stripedRightArrow","Block arrow that points right with stripes at the tail"],
            self::SUN->value => ["sun","Sun"],
            self::SWOOSH_ARROW->value => ["swooshArrow","Swoosh Arrow"],
            self::TEAR->value => ["teardrop","Teardrop"],
            self::TRAPEZOID->value => ["trapezoid","Trapezoid"],
            self::UP_ARROW->value => ["upArrow","Block arrow that points up"],
            self::UP_ARROW_CALLOUT->value => ["upArrowCallout","Callout with arrow that points up"],
            self::UP_DOWN_ARROW->value => ["upDownArrow","Block arrow that points up and down"],
            self::UP_DOWN_ARROW_CALLOUT->value => ["upDownArrowCallout","Callout with arrows that point up and down"],
            self::UP_RIBBON->value => ["ribbon2","Ribbon banner with center area above ribbon ends"],
            self::U_TURN_ARROW->value => ["uturnArrow","Block arrow forming a U shape"],
            self::VERTICAL_SCROLL->value => ["verticalScroll","Vertical scroll"],
            self::WAVE->value => ["wave","Wave"],
        ];

        return $values;
    }
}